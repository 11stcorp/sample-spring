{{- $appName := .Release.Name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
{{- if .Values.canaryType }}
  name: {{ include "11st-backoffice.fullname" . }}-{{ .Values.canaryType }}
{{- else }}
  name: {{ include "11st-backoffice.fullname" . }}
{{- end }}
  namespace: {{ .Values.namespace }}
  labels:
{{ include "11st-backoffice.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "11st-backoffice.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "11st-backoffice.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.hostAliases }}
      hostAliases:
{{ toYaml . | indent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          env:
          - name: JAVA_OPTS
            value: '{{ .Values.env.javaOptions }}'
          - name: POD_NAME_SPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: APP_NAME
            value: '{{ $appName }}-backoffice'
          - name: DD_SERVICE_NAME
          {{- if .Values.canaryType }}
            value: '$(APP_NAME)-{{ .Values.canaryType }}'
          {{- else }}
            value: '$(APP_NAME)'
          {{- end }}
          - name: DD_TRACE_GLOBAL_TAGS
            value: 'env:{{ .Values.environment }}'
          - name: DD_TRACE_ANALYTICS_ENABLED
            value: 'true'
          - name: DD_LOGS_INJECTION
            value: 'true'
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          image: '{{ .Values.image.repository }}/{{ .Values.image.imageName }}:{{ .Values.image.tag }}'
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
